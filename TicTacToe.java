package APPLET_JFRAME_FORM;

import java.util.Random;  // INCLUDES THE CONTROLS FOR THE COMPUTER TO PLAY!!!
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author GENTLEMAN
 */
public class TicTacToe extends javax.swing.JFrame {

    /**
     * Creates new form TicTacToe
     */
    public TicTacToe() {

        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {  // FOR WINDOWS EFFECT IN PROGRAM
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }

        } catch (Exception ex) {
            ex.getMessage();
        }

        initComponents();

        one.setEnabled(false);
        two.setEnabled(false);
        three.setEnabled(false);
        four.setEnabled(false);
        five.setEnabled(false);
        six.setEnabled(false);
        seven.setEnabled(false);
        eight.setEnabled(false);
        nine.setEnabled(false);

        round.setEnabled(false);

        challenger_1.setEnabled(false);
        challenger_2.setEnabled(false);

        score_1.setEnabled(false);
        score_2.setEnabled(false);

        play_comp.setEnabled(false);
        play_2.setEnabled(false);

        game_result.setEnabled(false);
        new_round.setEnabled(false);
        calculate_result.setEnabled(false);
        winner.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        j = new javax.swing.JTextPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        help_display = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        one = new javax.swing.JButton();
        six = new javax.swing.JButton();
        three = new javax.swing.JButton();
        four = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        five = new javax.swing.JButton();
        two = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        game_result = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        score_1 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        score_2 = new javax.swing.JTextPane();
        play_2 = new javax.swing.JButton();
        play_comp = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        new_game = new javax.swing.JButton();
        new_round = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        round = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        challenger_1 = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        challenger_2 = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        round_no = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        winner = new javax.swing.JTextPane();
        calculate_result = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        jTextField1.setText("jTextField1");

        jScrollPane8.setViewportView(j);

        jScrollPane9.setViewportView(help_display);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        one.setBackground(new java.awt.Color(255, 255, 255));
        one.setFont(new java.awt.Font("Cooper Black", 3, 18)); // NOI18N
        one.setText("TIC");
        one.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 255, 102)));
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        six.setBackground(new java.awt.Color(255, 255, 255));
        six.setFont(new java.awt.Font("Cooper Black", 3, 18)); // NOI18N
        six.setText("TAC");
        six.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 255, 102)));
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        three.setBackground(new java.awt.Color(255, 255, 255));
        three.setFont(new java.awt.Font("Cooper Black", 3, 18)); // NOI18N
        three.setText("TIC");
        three.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 255, 102)));
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        four.setBackground(new java.awt.Color(255, 255, 255));
        four.setFont(new java.awt.Font("Cooper Black", 3, 18)); // NOI18N
        four.setText("TAC");
        four.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 255, 102)));
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        eight.setBackground(new java.awt.Color(255, 255, 255));
        eight.setFont(new java.awt.Font("Cooper Black", 3, 18)); // NOI18N
        eight.setText("TOE");
        eight.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 255, 102)));
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setBackground(new java.awt.Color(255, 255, 255));
        nine.setFont(new java.awt.Font("Cooper Black", 3, 18)); // NOI18N
        nine.setText("TOE");
        nine.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 255, 102)));
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        seven.setBackground(new java.awt.Color(255, 255, 255));
        seven.setFont(new java.awt.Font("Cooper Black", 3, 18)); // NOI18N
        seven.setText("TOE");
        seven.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 255, 102)));
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        five.setBackground(new java.awt.Color(255, 255, 255));
        five.setFont(new java.awt.Font("Cooper Black", 3, 18)); // NOI18N
        five.setText("TAC");
        five.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 255, 102)));
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        two.setBackground(new java.awt.Color(255, 255, 255));
        two.setFont(new java.awt.Font("Cooper Black", 3, 18)); // NOI18N
        two.setText("TIC");
        two.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 255, 102)));
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        game_result.setEditable(false);
        game_result.setFont(new java.awt.Font("Iskoola Pota", 3, 18)); // NOI18N
        jScrollPane1.setViewportView(game_result);

        jLabel1.setFont(new java.awt.Font("Algerian", 3, 24)); // NOI18N
        jLabel1.setText("TIC - TAC - TOE  :  GAME ---");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(6, 5, 6, 5, new java.awt.Color(255, 153, 51)));

        score_1.setEditable(false);
        score_1.setFont(new java.awt.Font("Century Schoolbook", 3, 14)); // NOI18N
        jScrollPane2.setViewportView(score_1);

        score_2.setEditable(false);
        score_2.setFont(new java.awt.Font("Century Schoolbook", 3, 14)); // NOI18N
        jScrollPane3.setViewportView(score_2);

        play_2.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        play_2.setText("2 PLAYER");
        play_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_2ActionPerformed(evt);
            }
        });

        play_comp.setFont(new java.awt.Font("Tempus Sans ITC", 3, 14)); // NOI18N
        play_comp.setText("PLAY WITH COMPUTER");
        play_comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_compActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Iskoola Pota", 3, 24)); // NOI18N
        jLabel2.setText("SCOREBOARD - PLAY TO WIN!");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 3));

        new_game.setFont(new java.awt.Font("Lucida Calligraphy", 3, 11)); // NOI18N
        new_game.setText("NEW GAME");
        new_game.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));
        new_game.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_gameActionPerformed(evt);
            }
        });

        new_round.setFont(new java.awt.Font("Kartika", 3, 14)); // NOI18N
        new_round.setText("NEXT ROUND");
        new_round.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_roundActionPerformed(evt);
            }
        });

        round.setEditable(false);
        round.setFont(new java.awt.Font("Franklin Gothic Heavy", 3, 14)); // NOI18N
        jScrollPane4.setViewportView(round);

        challenger_1.setEditable(false);
        challenger_1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jScrollPane5.setViewportView(challenger_1);

        challenger_2.setEditable(false);
        challenger_2.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jScrollPane6.setViewportView(challenger_2);

        jLabel4.setFont(new java.awt.Font("Viner Hand ITC", 3, 24)); // NOI18N
        jLabel4.setText("GAME RESULT");

        round_no.setFont(new java.awt.Font("Meiryo", 3, 14)); // NOI18N
        round_no.setText("ROUND NUMBER ---");

        jLabel6.setFont(new java.awt.Font("Algerian", 3, 18)); // NOI18N
        jLabel6.setText("GAME WINNER");

        winner.setEditable(false);
        winner.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(51, 51, 51)));
        jScrollPane7.setViewportView(winner);

        calculate_result.setFont(new java.awt.Font("OCR A Extended", 1, 14)); // NOI18N
        calculate_result.setText("CALCULATE RESULTS");
        calculate_result.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculate_resultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(seven, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(four, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                    .addComponent(one, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(eight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(five, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                    .addComponent(two, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(three, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(six, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                    .addComponent(nine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(play_2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(play_comp))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                    .addComponent(jScrollPane6)
                                    .addComponent(round_no, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(calculate_result)
                                    .addComponent(new_round, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane7)))))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(new_game, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(new_game, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(play_2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(play_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(round_no, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(seven, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(nine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(17, 17, 17))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(new_round, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(calculate_result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void play_compActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play_compActionPerformed
        // TODO add your handling code here:

        player = JOptionPane.showInputDialog("ENTER PLAYER's NAME");
        computer = JOptionPane.showInputDialog("ENTER COMPUTER's NAME");

        challenger_1.setText("SCORE : (USER)" + player);
        challenger_2.setText("SCORE : " + computer);

        play_2.setEnabled(false);
        play_comp.setEnabled(false);

        one.setEnabled(true);
        two.setEnabled(true);
        three.setEnabled(true);
        four.setEnabled(true);
        five.setEnabled(true);
        six.setEnabled(true);
        seven.setEnabled(true);
        eight.setEnabled(true);
        nine.setEnabled(true);

        round.setEnabled(true);
        challenger_1.setEnabled(true);
        challenger_2.setEnabled(true);
        score_1.setEnabled(true);
        score_2.setEnabled(true);

        game_result.setEnabled(true);

        round.setText("PLAYING ROUND --- " + count); // COUNT IS 1 IN THE STARTING

        bot_play = 0;  // THE COMPUTER GAME SYSTEM STARTS HERE
    }//GEN-LAST:event_play_compActionPerformed

    private void play_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play_2ActionPerformed
        // TODO add your handling code here:

        new_game.setEnabled(false);
        play_2.setEnabled(false);
        play_comp.setEnabled(false);

        player1 = JOptionPane.showInputDialog("ENTER PLAYER's 1 NAME [X PLAYER]"); // BECOZ FIRST O IS TO PLAY
        player2 = JOptionPane.showInputDialog("ENTER PLAYER's 2 NAME [0 PLAYER]");

        challenger_1.setText("SCORE X : " + player1);
        challenger_2.setText("SCORE O : " + player2);

        one.setEnabled(true);
        two.setEnabled(true);
        three.setEnabled(true);
        four.setEnabled(true);
        five.setEnabled(true);
        six.setEnabled(true);
        seven.setEnabled(true);
        eight.setEnabled(true);
        nine.setEnabled(true);
        round.setEnabled(true);
        challenger_1.setEnabled(true);
        challenger_2.setEnabled(true);
        score_1.setEnabled(true);
        score_2.setEnabled(true);

        game_result.setEnabled(true);

        round.setText("PLAYING ROUND --- " + count);

    }//GEN-LAST:event_play_2ActionPerformed

    private void new_gameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_gameActionPerformed
        // TODO add your handling code here:

        xwin = 0;  // THE COUNT OF WIN OF THE PLAYERS
        owin = 0;

        one.setEnabled(false);
        two.setEnabled(false);
        three.setEnabled(false);
        four.setEnabled(false);
        five.setEnabled(false);
        six.setEnabled(false);
        seven.setEnabled(false);
        eight.setEnabled(false);
        nine.setEnabled(false);
        round.setEnabled(false);
        challenger_1.setEnabled(false);
        challenger_2.setEnabled(false);
        score_1.setEnabled(false);
        score_2.setEnabled(false);

        game_result.setEnabled(false);
        new_round.setEnabled(false);
        calculate_result.setEnabled(false);
        winner.setEnabled(false);

        play_2.setEnabled(true);
        play_comp.setEnabled(true);

        // DEFAULT TEXT WHILE PLAYING THE GAME
        one.setText("TIC");
        two.setText("TIC");
        three.setText("TIC");
        four.setText("TAC");
        five.setText("TAC");
        six.setText("TAC");
        seven.setText("TOE");
        eight.setText("TOE");
        nine.setText("TOE");

        round.setText("");
        challenger_1.setText("");
        challenger_2.setText("");
        score_1.setText("");
        score_2.setText("");
        count = 1;

        used[0] = 0;
        used[1] = 0;
        used[2] = 0;
        used[3] = 0;
        used[4] = 0;
        used[5] = 0;
        used[6] = 0;
        used[7] = 0;
        used[8] = 0;

        game_result.setText("");
        winner.setText("");

        help = 0; // THIS IS FOR COUNTING THE TURN THAT THE COMPUTER AND PLAYER PLAY...
        bot_play = 1; // TURNING OFF BOT PLAY..
    }//GEN-LAST:event_new_gameActionPerformed

    private void new_roundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_roundActionPerformed
        // TODO add your handling code here:
        help = 0; // NEXT ROUND , THE COMPUER AND PLAYER GAME TURNS --- WILL BE ZERO

        game_result.setText("");

        one.setEnabled(true);
        two.setEnabled(true);
        three.setEnabled(true);
        four.setEnabled(true);
        five.setEnabled(true);
        six.setEnabled(true);
        seven.setEnabled(true);
        eight.setEnabled(true);
        nine.setEnabled(true);

        used[0] = 0;
        used[1] = 0;
        used[2] = 0;
        used[3] = 0;
        used[4] = 0;
        used[5] = 0;
        used[6] = 0;
        used[7] = 0;
        used[8] = 0;

        one.setText("TIC");
        two.setText("TIC");
        three.setText("TIC");
        four.setText("TAC");
        five.setText("TAC");
        six.setText("TAC");
        seven.setText("TOE");
        eight.setText("TOE");
        nine.setText("TOE");

        count++; // INCREASES THE ROUND COUNT BY 1

        round.setText("PLAYING ROUND --- " + count);
        calculate_result.setEnabled(true);

        new_round.setEnabled(false); // THIS WILL TURN OFF ROUND OPTION TILL THE CURRENT GAME IS COMPLETED
    }//GEN-LAST:event_new_roundActionPerformed

    private void calculate_resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculate_resultActionPerformed
        // TODO add your handling code here:

        winner.setEnabled(true);
        if (bot_play == 1) {
            if (xwin > owin) {
                winner.setText(player1 + " : IS THE WINNER OF THIS GAME");
            } else if (owin > xwin) {
                winner.setText(player2 + " : IS THE WINNER OF THIS GAME");
            } else {
                winner.setText("THE GAME IS A DRAW");
            }
        }
 
        // DONE SAPARATELY  BECOZ THE VARIABLES ARE DIFFERENT FOR BOTH THE GAME OPTIONS
        
        if (bot_play == 0) {
            if (xwin > owin) {
                winner.setText(player + " : IS THE WINNER OF THIS GAME");
            } else if (owin > xwin) {
                winner.setText(computer + " : IS THE WINNER OF THIS GAME");
            } else {
                winner.setText("THE GAME IS A DRAW");
            }
        }
        new_game.setEnabled(true);

    }//GEN-LAST:event_calculate_resultActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        // TODO add your handling code here:

        if (used[0] == 0) {
            if (click == 1) {
                one.setText("X"); // FIRST X WILL PLAY...
                help++;
                click++;
                used[0] = 1;
            } else if (click == 2) {
                one.setText("O");
                help++;
                click--;
                used[0] = 1;
            }
            if (bot_play == 1) {
                game_winner();
            }

            if (repeat == 0 && bot_play == 0) { // add bot play so no confusion between user and computer
                for (int i = 2; i > 1; i++) { // i>1 for infinite running... (IT WILL RUN TILL THE LOOP IS BREAKED)
                    computer();
                    if (help == 9.0) {
                        game_result.setText("THE GAME IS A DRAW");
                        new_round.setEnabled(true);
                        repeat = 1;
                    }

                    if (repeat == 1) {

                        game_winner(); // INSIDE 1 BECOZ THE WINNER WILL NOT RUN EVERY TIME AND CREATE CONFUSION OF WIINS OF PLAYER..

                        break; // BREAKING THE LOOP
                    }
                }

            }
            repeat = 0;
        } else {
            JOptionPane.showMessageDialog(null, "BUTTON IS ALREADY PRESSED");
        }


    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:

        if (used[1] == 0) {
            if (click == 1) {
                two.setText("X");
                help++;
                click++;
                used[1] = 1;
            } else if (click == 2) {
                two.setText("O");
                help++;
                click--;
                used[1] = 1;
            }
            if (bot_play == 1) {
                game_winner();
            }

            if (repeat == 0 && bot_play == 0) {
                for (int i = 2; i > 1; i++) {
                    computer();
                    if (help == 9.0) {
                        game_result.setText("THE GAME IS A DRAW");
                        new_round.setEnabled(true);
                        repeat = 1;
                    }

                    if (repeat == 1) { // VALUE CHANGES AFTER THE COMPUTER PLAYS

                        game_winner();

                        break;
                    }
                }

            }
            repeat = 0;
        } else {
            JOptionPane.showMessageDialog(null, "BUTTON IS ALREADY PRESSED");
        }
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:

        if (used[2] == 0) {
            if (click == 1) {
                three.setText("X");
                help++;
                click++;
                used[2] = 1;
            } else if (click == 2) {
                three.setText("O");
                help++;
                click--;
                used[2] = 1;
            }
            if (bot_play == 1) {
                game_winner();
            }

            if (repeat == 0 && bot_play == 0) {
                for (int i = 2; i > 1; i++) {
                    computer();
                    if (help == 9.0) {
                        game_result.setText("THE GAME IS A DRAW");
                        new_round.setEnabled(true);
                        repeat = 1;
                    }

                    if (repeat == 1) {

                        game_winner();

                        break;
                    }
                }

            }
            repeat = 0;
        } else {
            JOptionPane.showMessageDialog(null, "BUTTON IS ALREADY PRESSED");
        }

    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        // TODO add your handling code here:

        if (used[3] == 0) {
            if (click == 1) {
                four.setText("X");
                help++;
                click++;
                used[3] = 1;
            } else if (click == 2) {
                four.setText("O");
                help++;
                click--;
                used[3] = 1;
            }
            if (bot_play == 1) {
                game_winner();
            }

            if (repeat == 0 && bot_play == 0) {
                for (int i = 2; i > 1; i++) {
                    computer();
                    if (help == 9.0) {
                        game_result.setText("THE GAME IS A DRAW");
                        new_round.setEnabled(true);
                        repeat = 1;
                    }

                    if (repeat == 1) {

                        game_winner();

                        break;
                    }
                }

            }
            repeat = 0;
        } else {
            JOptionPane.showMessageDialog(null, "BUTTON IS ALREADY PRESSED");
        }
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        // TODO add your handling code here:

        if (used[4] == 0) {
            if (click == 1) {
                five.setText("X");
                help++;
                click++;
                used[4] = 1;
            } else if (click == 2) {
                five.setText("O");
                help++;
                click--;
                used[4] = 1;
            }
            if (bot_play == 1) {
                game_winner();
            }

            if (repeat == 0 && bot_play == 0) {
                for (int i = 2; i > 1; i++) {
                    computer();
                    if (help == 9.0) {
                        game_result.setText("THE GAME IS A DRAW");
                        new_round.setEnabled(true);
                        repeat = 1;
                    }

                    if (repeat == 1) {

                        game_winner();

                        break;
                    }
                }

            }
            repeat = 0;
        } else {
            JOptionPane.showMessageDialog(null, "BUTTON IS ALREADY PRESSED");
        }
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:

        if (used[5] == 0) {
            if (click == 1) {
                six.setText("X");
                help++;
                click++;
                used[5] = 1;
            } else if (click == 2) {
                six.setText("O");
                help++;
                click--;
                used[5] = 1;
            }
            if (bot_play == 1) {
                game_winner();
            }

            if (repeat == 0 && bot_play == 0) {
                for (int i = 2; i > 1; i++) {
                    computer();
                    if (help == 9.0) {
                        game_result.setText("THE GAME IS A DRAW");
                        new_round.setEnabled(true);
                        repeat = 1;
                    }

                    if (repeat == 1) {

                        game_winner();

                        break;
                    }
                }

            }
            repeat = 0;
        } else {
            JOptionPane.showMessageDialog(null, "BUTTON IS ALREADY PRESSED");
        }
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        // TODO add your handling code here:

        if (used[6] == 0) {
            if (click == 1) {
                seven.setText("X");
                help++;
                click++;
                used[6] = 1;
            } else if (click == 2) {
                seven.setText("O");
                help++;
                click--;
                used[6] = 1;
            }

            if (bot_play == 1) {
                game_winner();
            }

            if (repeat == 0 && bot_play == 0) {
                for (int i = 2; i > 1; i++) {
                    computer();
                    if (help == 9.0) {
                        game_result.setText("THE GAME IS A DRAW");
                        new_round.setEnabled(true);
                        repeat = 1;
                    }

                    if (repeat == 1) {

                        game_winner();

                        break;
                    }
                }

            }
            repeat = 0;
        } else {
            JOptionPane.showMessageDialog(null, "BUTTON IS ALREADY PRESSED");
        }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        // TODO add your handling code here:

        if (used[7] == 0) {
            if (click == 1) {
                eight.setText("X");
                help++;
                click++;
                used[7] = 1;
            } else if (click == 2) {
                eight.setText("O");
                help++;
                click--;
                used[7] = 1;
            }
            if (bot_play == 1) {
                game_winner();
            }

            if (repeat == 0 && bot_play == 0) {
                for (int i = 2; i > 1; i++) {
                    computer();
                    game_winner();

                    if (repeat == 1) {

                        game_winner();

                        break;
                    }
                }

            }
            repeat = 0;
        } else {
            JOptionPane.showMessageDialog(null, "BUTTON IS ALREADY PRESSED");
        }
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        // TODO add your handling code here:

        if (used[8] == 0) {
            if (click == 1) {
                nine.setText("X");
                help++;
                click++;
                used[8] = 1;
            } else if (click == 2) {
                nine.setText("O");
                help++;
                click--;
                used[8] = 1;
            }
            if (bot_play == 1) {
                game_winner();
            }

            if (repeat == 0 && bot_play == 0) {
                for (int i = 2; i > 1; i++) { // LOOP WILL RUN INFINITE TIMES UNTILL REPEAT IS 1
                    computer();
                    game_winner();

                    if (repeat == 1) {

                        game_winner();

                        break;
                    }
                }

            }
            repeat = 0;
        } else {
            JOptionPane.showMessageDialog(null, "BUTTON IS ALREADY PRESSED");
        }
    }//GEN-LAST:event_nineActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:

        this.setLocation(600, 350); // SETTING THE LOCATION OF THE GAME (X AXIS AND Y AXIS)
    }//GEN-LAST:event_formWindowActivated

    private void game_winner() {
        String a, b, c, d, e, f, g, h, i;

        a = one.getText();
        b = two.getText();
        c = three.getText();

        d = four.getText();
        e = five.getText();
        f = six.getText();

        g = seven.getText();
        h = eight.getText();
        i = nine.getText();

        if (help == 9.0) {
            game_result.setText("THE GAME IS A DRAW");
            new_round.setEnabled(true);
            repeat = 1;
        }
        // FOR X
        if (a.equals("X") && b.equals("X") && c.equals("X")) {
            game_result.setText("X IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            xwin++;  // DEFAULT IS SET AS 0
            score_1.setText("YOUR POINTS --- " + xwin);
        }
        if (d.equals("X") && e.equals("X") && f.equals("X")) {
            game_result.setText("X IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            xwin++;
            score_1.setText("YOUR POINTS --- " + xwin);
        }
        if (g.equals("X") && h.equals("X") && i.equals("X")) {
            game_result.setText("X IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            xwin++;
            score_1.setText("YOUR POINTS --- " + xwin);
        }
        if (a.equals("X") && d.equals("X") && g.equals("X")) {
            game_result.setText("X IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            xwin++;
            score_1.setText("YOUR POINTS --- " + xwin);
        }
        if (c.equals("X") && f.equals("X") && i.equals("X")) {
            game_result.setText("X IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            xwin++;
            score_1.setText("YOUR POINTS --- " + xwin);
        }
        if (a.equals("X") && e.equals("X") && i.equals("X")) {
            game_result.setText("X IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            xwin++;
            score_1.setText("YOUR POINTS --- " + xwin);
        }
        if (c.equals("X") && e.equals("X") && g.equals("X")) {
            game_result.setText("X IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            xwin++;
            score_1.setText("YOUR POINTS --- " + xwin);
        }
        if (b.equals("X") && e.equals("X") && h.equals("X")) {
            game_result.setText("X IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            xwin++;  //THE COUNT OF 1ST PLAYER INCREASES
            score_1.setText("YOUR POINTS --- " + xwin);
        }

        // for O (SAME)
        if (a.equals("O") && b.equals("O") && c.equals("O")) {
            game_result.setText("O IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            owin++; // THE COUNT OF 2ND PLAYER INCREASES
            score_2.setText("YOUR POINTS --- " + owin);
        }
        if (d.equals("O") && e.equals("O") && f.equals("O")) {
            game_result.setText("O IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            owin++;
            score_2.setText("YOUR POINTS --- " + owin);
        }
        if (g.equals("O") && h.equals("O") && i.equals("O")) {
            game_result.setText("O IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            owin++;
            score_2.setText("YOUR POINTS --- " + owin);
        }
        if (a.equals("O") && d.equals("O") && g.equals("O")) {
            game_result.setText("O IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            owin++;
            score_2.setText("YOUR POINTS --- " + owin);
        }
        if (c.equals("O") && f.equals("O") && i.equals("O")) {
            game_result.setText("O IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            owin++;
            score_2.setText("YOUR POINTS --- " + owin);
        }
        if (a.equals("O") && e.equals("O") && i.equals("O")) {
            game_result.setText("O IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            owin++;
            score_2.setText("YOUR POINTS --- " + owin);
        }
        if (c.equals("O") && e.equals("O") && g.equals("O")) {
            game_result.setText("O IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            owin++;
            score_2.setText("YOUR POINTS --- " + owin);
        }
        if (b.equals("O") && e.equals("O") && h.equals("O")) {
            game_result.setText("O IS THE WINNER!!!");
            one.setEnabled(false);
            two.setEnabled(false);
            three.setEnabled(false);
            four.setEnabled(false);
            five.setEnabled(false);
            six.setEnabled(false);
            seven.setEnabled(false);
            eight.setEnabled(false);
            nine.setEnabled(false);
            owin++;
            score_2.setText("YOUR POINTS --- " + owin);
        }

        if (game_result.getText().length() > 4) {  //THE DISPLAYED RESULT OF THE GAME
            new_round.setEnabled(true); // ALLOWING TO PLAY NEXT ROUND
        }

    }

    private void computer() {

        if (bot_play == 0) {
            Random r = new Random();
            int option1 = r.nextInt(9); // NINE NUMBERS CHOOSEN RandomLY
            int option2 = r.nextInt(2); // TWO NUMBERS CHOOSEN RandomLY

            switch (option1) {
                case 1:
                    if (option2 == 1) {
                        if ("TIC".equals(one.getText())) {
                            one.setText("O"); // AS COMPUTER IS PLAYING SECOND IT WILL BE O AS SECOND PLAYER
                            help++;
                            repeat = 1;
                            used[0] = 1;
                        } else {
                            option1 = 0;
                            option2 = 0;

                        }
                    } else if (option2 == 2) {
                        option1 = 0;
                        option2 = 0;

                    }
                    break;
                case 2:
                    if (option2 == 1) {
                        if ("TIC".equals(two.getText())) {
                            two.setText("O");
                            help++;
                            repeat = 1;
                            used[1] = 1;
                        } else {
                            option1 = 0;
                            option2 = 0;

                        }
                    } else if (option2 == 2) {
                        option1 = 0;
                        option2 = 0;

                    }
                    break;
                case 3:
                    if (option2 == 1) {
                        if ("TIC".equals(three.getText())) {
                            three.setText("O");
                            help++;
                            repeat = 1;
                            used[2] = 1;
                        } else {
                            option1 = 0;
                            option2 = 0;

                        }
                    } else if (option2 == 2) {
                        option1 = 0;
                        option2 = 0;

                    }
                    break;
                case 4:
                    if (option2 == 1) {
                        if ("TAC".equals(four.getText())) {
                            four.setText("O");
                            help++;
                            repeat = 1;
                            used[3] = 1;
                        } else {
                            option1 = 0;
                            option2 = 0;

                        }
                    } else if (option2 == 2) {
                        option1 = 0;
                        option2 = 0;

                    }
                    break;
                case 5:
                    if (option2 == 1) {
                        if ("TAC".equals(five.getText())) {
                            five.setText("O");
                            help++;  //INCREASING THE TURN PLAYED BY THE COMPUTER
                            repeat = 1;
                            used[4] = 1;
                        } else {
                            option1 = 0;
                            option2 = 0;

                        }
                    } else if (option2 == 2) {
                        option1 = 0;
                        option2 = 0;

                    }
                    break;
                case 6:
                    if (option2 == 1) {
                        if ("TAC".equals(six.getText())) {
                            six.setText("O");
                            help++;
                            repeat = 1;
                            used[5] = 1;
                        } else {
                            option1 = 0;
                            option2 = 0;

                        }
                    } else if (option2 == 2) {
                        option1 = 0;
                        option2 = 0;

                    }
                    break;
                case 7:
                    if (option2 == 1) {
                        if ("TOE".equals(seven.getText())) {
                            seven.setText("O");
                            help++;
                            repeat = 1;
                            used[6] = 1;
                        } else {
                            option1 = 0;
                            option2 = 0;

                        }
                    } else if (option2 == 2) {
                        option1 = 0;
                        option2 = 0;

                    }
                    break;
                case 8:
                    if (option2 == 1) {
                        if ("TOE".equals(eight.getText())) {
                            eight.setText("O");
                            help++;
                            repeat = 1;
                            used[7] = 1;
                        } else {
                            option1 = 0;
                            option2 = 0;

                        }

                    } else if (option2 == 2) {
                        option1 = 0;
                        option2 = 0;

                    }
                    break;
                case 9:
                    if (option2 == 1) {
                        if ("TOE".equals(nine.getText())) {
                            nine.setText("O");
                            help++;
                            repeat = 1;
                            used[8] = 1;
                        } else {
                            option1 = 0;
                            option2 = 0;

                        }

                    } else if (option2 == 2) {
                        option1 = 0;
                        option2 = 0;

                    }
                    break;
                default:
                    break;
            }

            click = 1; // PLAYER'S CHANCE
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicTacToe().setVisible(true);
            }
        });
    }

    // BOT PLAY :  0 --- BOT TURNED ON , 1 --- BOT NOT  IN PLAY (IT WILL GET ON WHEN PLAYER CHOOSES IT)
    //PLAYER PLAY : 0 --- PLAYER PLAYED , 1 --- PLAYER TO PLAY
    private String player, player1, player2, computer = "BOT";
    private int click = 1, used[] = {0, 0, 0, 0, 0, 0, 0, 0, 0}, count = 1, xwin = 0, owin = 0, bot_play = 1, repeat = 0, help = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculate_result;
    private javax.swing.JTextPane challenger_1;
    private javax.swing.JTextPane challenger_2;
    private javax.swing.JButton eight;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JTextPane game_result;
    private javax.swing.JTextPane help_display;
    private javax.swing.JTextPane j;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton new_game;
    private javax.swing.JButton new_round;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton play_2;
    private javax.swing.JButton play_comp;
    private javax.swing.JTextPane round;
    private javax.swing.JLabel round_no;
    private javax.swing.JTextPane score_1;
    private javax.swing.JTextPane score_2;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JTextPane winner;
    // End of variables declaration//GEN-END:variables
}

